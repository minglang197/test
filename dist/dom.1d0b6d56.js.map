{"version":3,"sources":["dom.js"],"names":["window","dom","style","node","name","value","arguments","length","Object","object","key","find","selector","scope","document","querySelectorAll","each","nodeList","fn","i","call"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACT;AACAC,EAAAA,KAFS,iBAEHC,IAFG,EAEGC,IAFH,EAESC,KAFT,EAEgB;AACrB,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxB;AACAJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB,CAFwB,CAEA;AAC3B,KAHD,MAGO,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,UAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAAC;AAC3B;AACA,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACH,OAHD,MAGO,IAAIA,IAAI,YAAYI,MAApB,EAA4B;AAAC;AAChC;AACA,YAAMC,MAAM,GAAGL,IAAf;;AACA,aAAK,IAAIM,GAAT,IAAgBD,MAAhB,EAAwB;AACpBN,UAAAA,IAAI,CAACD,KAAL,CAAWQ,GAAX,IAAkBD,MAAM,CAACC,GAAD,CAAxB,CADoB,CACS;AAChC;AACJ;AACJ;AACJ,GAlBQ;;AAmBT;AACAC,EAAAA,IApBS,gBAoBJC,QApBI,EAoBMC,KApBN,EAoBa;AAClB,WAAO,CAACA,KAAK,IAAIC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP,CADkB,CACmC;AACxD,GAtBQ;;AAuBT;AACAI,EAAAA,IAxBS,gBAwBJC,QAxBI,EAwBMC,EAxBN,EAwBU;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACV,MAA7B,EAAqCY,CAAC,EAAtC,EAA0C;AACtCD,MAAAA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAcH,QAAQ,CAACE,CAAD,CAAtB;AACH;AACJ;AA5BQ,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    /*读写style的属性 */\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            // dom.style(div, 'color', 'red')\r\n            node.style[name] = value//参数为3，表示是设置style的值\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {//判断name是不是字符串，是的话就是读取style的属性\r\n                // dom.style(div, 'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {//判断name是不是对象\r\n                // dom.style(div, {color: 'red'})\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]//遍历对象，以对象的形式设置style\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*获取标签或者很多标签 */\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)//scope里没有，再去document里找\r\n    },\r\n    /*遍历所有节点 */\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n};"]}